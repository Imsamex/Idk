-- Variables
local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local camera = workspace.CurrentCamera
local ballName = "SoccerBall"
local currentBall = nil
local espParts = {}
local featureEnabled = {
    autoHit = false,
    espBall = true,
    hitbox = false,
    viewBall = false
}

-- Function to find the ball
local function findBallInWorkspace()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and obj.Name == ballName then
            return obj
        end
    end
    return nil
end

-- Function to set ball size
local function setBallSize(ball, size)
    ball.Size = size
end

-- Function to create/update ESP
local function createOrUpdateESP(ball)
    if espParts[ball] then return end

    local espPart = Instance.new("BillboardGui")
    espPart.Size = UDim2.new(0, 200, 0, 50)
    espPart.AlwaysOnTop = true
    espPart.Adornee = ball
    espPart.Parent = ball

    local ballText = Instance.new("TextLabel")
    ballText.Size = UDim2.new(1, 0, 0.3, 0)
    ballText.Position = UDim2.new(0, 0, -0.2, 0)
    ballText.TextColor3 = Color3.fromRGB(255, 255, 255)
    ballText.TextScaled = true
    ballText.Text = "Ball"
    ballText.BackgroundTransparency = 1
    ballText.Parent = espPart

    local distanceText = Instance.new("TextLabel")
    distanceText.Size = UDim2.new(1, 0, 0.3, 0)
    distanceText.Position = UDim2.new(0, 0, 0.3, 0)
    distanceText.TextColor3 = Color3.fromRGB(255, 255, 255)
    distanceText.TextScaled = true
    distanceText.Text = "Distance: 0"
    distanceText.BackgroundTransparency = 1
    distanceText.Parent = espPart

    espParts[ball] = { esp = espPart, distanceText = distanceText }

    coroutine.wrap(function()
        while ball and ball.Parent do
            local distance = (localPlayer.Character.HumanoidRootPart.Position - ball.Position).Magnitude
            distanceText.Text = "Distance: " .. math.floor(distance)
            wait(0.1)
        end
        if espParts[ball] then
            espParts[ball].esp:Destroy()
            espParts[ball] = nil
        end
    end)()
end

-- Function to create a UI button to toggle features
local function createFeatureUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FeatureUI"
    screenGui.Parent = localPlayer:WaitForChild("PlayerGui") -- Parent the GUI to PlayerGui to make it visible

    local frame = Instance.new("Frame", screenGui)
    frame.Size = UDim2.new(0, 200, 0, 300)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundTransparency = 0.3
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.Text = "Features"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1
    title.TextScaled = true

    -- Create buttons for each feature
    local yOffset = 40

    local function createButton(name, callback)
        local button = Instance.new("TextButton", frame)
        button.Size = UDim2.new(1, 0, 0, 30)
        button.Position = UDim2.new(0, 0, 0, yOffset)
        button.Text = name
        button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextScaled = true
        button.MouseButton1Click:Connect(callback)
        yOffset = yOffset + 35
    end

    createButton("Toggle ESP", function()
        featureEnabled.espBall = not featureEnabled.espBall
    end)

    createButton("Toggle Hitbox Size", function()
        featureEnabled.hitbox = not featureEnabled.hitbox
    end)

    createButton("View Ball", function()
        featureEnabled.viewBall = not featureEnabled.viewBall
        if featureEnabled.viewBall and currentBall then
            camera.CameraType = Enum.CameraType.Scriptable
            camera.CFrame = CFrame.new(camera.CFrame.Position, currentBall.Position)
        else
            camera.CameraType = Enum.CameraType.Custom
        end
    end)
end

-- Main loop to continuously search for the ball, create/update ESP, and handle features
while true do
    local ball = findBallInWorkspace()
    if ball then
        if not currentBall or currentBall ~= ball then
            currentBall = ball
            createOrUpdateESP(ball)
        end

        -- Handle ball size change and hitbox
        if featureEnabled.hitbox then
            setBallSize(ball, Vector3.new(20, 20, 20))  -- Set ball size to 20x20x20
        else
            setBallSize(ball, Vector3.new(10, 10, 10))  -- Reset to default size
        end

        -- Update camera lock if "View Ball" is enabled
        if featureEnabled.viewBall then
            camera.CFrame = CFrame.new(camera.CFrame.Position, ball.Position)
        end
    else
        -- Ball not found, reset the camera if needed
        currentBall = nil
        if featureEnabled.viewBall then
            camera.CameraType = Enum.CameraType.Custom
        end
    end

    wait(0.1)
end

-- Create the feature UI
createFeatureUI()
